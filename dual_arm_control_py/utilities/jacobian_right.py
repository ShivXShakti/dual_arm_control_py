import numpy as np
#theta8, theta9, theta10, theta11, theta12, theta13, theta14 = 0,0,0,0,0,0,0
theta8, theta9, theta10, theta11, theta12, theta13, theta14 = np.pi,np.pi/2,np.pi/3,np.pi/4,np.pi/5,np.pi/6,np.pi/7
J = np.array([[0, np.cos(theta8), np.sin(theta8)*np.sin(theta9), -np.sin(theta8)*np.sin(theta10)*np.cos(theta9) + np.cos(theta8)*np.cos(theta10), -(-np.sin(theta8)*np.cos(theta9)*np.cos(theta10) - np.sin(theta10)*np.cos(theta8))*np.sin(theta11) + np.sin(theta8)*np.sin(theta9)*np.cos(theta11), 
               ((-np.sin(theta8)*np.cos(theta9)*np.cos(theta10) - np.sin(theta10)*np.cos(theta8))*np.cos(theta11) + np.sin(theta8)*np.sin(theta9)*np.sin(theta11))*np.sin(theta12) + (-np.sin(theta8)*np.sin(theta10)*np.cos(theta9) + np.cos(theta8)*np.cos(theta10))*np.cos(theta12), 
               -(((-np.sin(theta8)*np.cos(theta9)*np.cos(theta10) - np.sin(theta10)*np.cos(theta8))*np.cos(theta11) + np.sin(theta8)*np.sin(theta9)*np.sin(theta11))*np.cos(theta12) - (-np.sin(theta8)*np.sin(theta10)*np.cos(theta9) + np.cos(theta8)*np.cos(theta10))*np.sin(theta12))*np.sin(theta13) + (-(-np.sin(theta8)*np.cos(theta9)*np.cos(theta10) - np.sin(theta10)*np.cos(theta8))*np.sin(theta11) + np.sin(theta8)*np.sin(theta9)*np.cos(theta11))*np.cos(theta13)],
    
            [-1, 0, -np.cos(theta9), -np.sin(theta9)*np.sin(theta10), np.sin(theta9)*np.sin(theta11)*np.cos(theta10) - np.cos(theta9)*np.cos(theta11), (-np.sin(theta9)*np.cos(theta10)*np.cos(theta11) - np.sin(theta11)*np.cos(theta9))*np.sin(theta12) - np.sin(theta9)*np.sin(theta10)*np.cos(theta12), 
             -((-np.sin(theta9)*np.cos(theta10)*np.cos(theta11) - np.sin(theta11)*np.cos(theta9))*np.cos(theta12) + np.sin(theta9)*np.sin(theta10)*np.sin(theta12))*np.sin(theta13) + (np.sin(theta9)*np.sin(theta11)*np.cos(theta10) - np.cos(theta9)*np.cos(theta11))*np.cos(theta13)], 
    
            [0, np.sin(theta8), -np.sin(theta9)*np.cos(theta8), np.sin(theta8)*np.cos(theta10) + np.sin(theta10)*np.cos(theta8)*np.cos(theta9), -(-np.sin(theta8)*np.sin(theta10) + np.cos(theta8)*np.cos(theta9)*np.cos(theta10))*np.sin(theta11) - np.sin(theta9)*np.cos(theta8)*np.cos(theta11), 
             ((-np.sin(theta8)*np.sin(theta10) + np.cos(theta8)*np.cos(theta9)*np.cos(theta10))*np.cos(theta11) - np.sin(theta9)*np.sin(theta11)*np.cos(theta8))*np.sin(theta12) + (np.sin(theta8)*np.cos(theta10) + np.sin(theta10)*np.cos(theta8)*np.cos(theta9))*np.cos(theta12), 
             -(((-np.sin(theta8)*np.sin(theta10) + np.cos(theta8)*np.cos(theta9)*np.cos(theta10))*np.cos(theta11) - np.sin(theta9)*np.sin(theta11)*np.cos(theta8))*np.cos(theta12) - (np.sin(theta8)*np.cos(theta10) + np.sin(theta10)*np.cos(theta8)*np.cos(theta9))*np.sin(theta12))*np.sin(theta13) + (-(-np.sin(theta8)*np.sin(theta10) + np.cos(theta8)*np.cos(theta9)*np.cos(theta10))*np.sin(theta11) - np.sin(theta9)*np.cos(theta8)*np.cos(theta11))*np.cos(theta13)], 
    
            [(-0.2251*((np.sin(theta8)*np.sin(theta10) - np.cos(theta8)*np.cos(theta9)*np.cos(theta10))*np.cos(theta11) + np.sin(theta9)*np.sin(theta11)*np.cos(theta8))*np.cos(theta12) - 0.2251*(np.sin(theta8)*np.cos(theta10) + np.sin(theta10)*np.cos(theta8)*np.cos(theta9))*np.sin(theta12))*np.sin(theta13) + (0.2251*(-np.sin(theta8)*np.sin(theta10) + np.cos(theta8)*np.cos(theta9)*np.cos(theta10))*np.sin(theta11) + 0.2251*np.sin(theta9)*np.cos(theta8)*np.cos(theta11))*np.cos(theta13) + (-0.32*np.sin(theta8)*np.sin(theta10) + 0.32*np.cos(theta8)*np.cos(theta9)*np.cos(theta10))*np.sin(theta11) + 0.32*np.sin(theta9)*np.cos(theta8)*np.cos(theta11) + 0.3*np.sin(theta9)*np.cos(theta8), 
             (-0.2251*(np.sin(theta8)*np.sin(theta9)*np.cos(theta10)*np.cos(theta11) + np.sin(theta8)*np.sin(theta11)*np.cos(theta9))*np.cos(theta12) + 0.2251*np.sin(theta8)*np.sin(theta9)*np.sin(theta10)*np.sin(theta12))*np.sin(theta13) + (-0.2251*np.sin(theta8)*np.sin(theta9)*np.sin(theta11)*np.cos(theta10) + 0.2251*np.sin(theta8)*np.cos(theta9)*np.cos(theta11))*np.cos(theta13) - 0.32*np.sin(theta8)*np.sin(theta9)*np.sin(theta11)*np.cos(theta10) + 0.32*np.sin(theta8)*np.cos(theta9)*np.cos(theta11) + 0.3*np.sin(theta8)*np.cos(theta9), 
             (-0.2251*(np.sin(theta8)*np.sin(theta10)*np.cos(theta9) - np.cos(theta8)*np.cos(theta10))*np.cos(theta11)*np.cos(theta12) - 0.2251*(np.sin(theta8)*np.cos(theta9)*np.cos(theta10) + np.sin(theta10)*np.cos(theta8))*np.sin(theta12))*np.sin(theta13) + 0.2251*(-np.sin(theta8)*np.sin(theta10)*np.cos(theta9) + np.cos(theta8)*np.cos(theta10))*np.sin(theta11)*np.cos(theta13) + (-0.32*np.sin(theta8)*np.sin(theta10)*np.cos(theta9) + 0.32*np.cos(theta8)*np.cos(theta10))*np.sin(theta11), 
             -0.2251*(-(-np.sin(theta8)*np.cos(theta9)*np.cos(theta10) - np.sin(theta10)*np.cos(theta8))*np.sin(theta11) + np.sin(theta8)*np.sin(theta9)*np.cos(theta11))*np.sin(theta13)*np.cos(theta12) + (0.2251*(np.sin(theta8)*np.cos(theta9)*np.cos(theta10) + np.sin(theta10)*np.cos(theta8))*np.cos(theta11) - 0.2251*np.sin(theta8)*np.sin(theta9)*np.sin(theta11))*np.cos(theta13) + (0.32*np.sin(theta8)*np.cos(theta9)*np.cos(theta10) + 0.32*np.sin(theta10)*np.cos(theta8))*np.cos(theta11) - 0.32*np.sin(theta8)*np.sin(theta9)*np.sin(theta11), 
             (0.2251*((-np.sin(theta8)*np.cos(theta9)*np.cos(theta10) - np.sin(theta10)*np.cos(theta8))*np.cos(theta11) + np.sin(theta8)*np.sin(theta9)*np.sin(theta11))*np.sin(theta12) - 0.2251*(np.sin(theta8)*np.sin(theta10)*np.cos(theta9) - np.cos(theta8)*np.cos(theta10))*np.cos(theta12))*np.sin(theta13), 
             (-0.2251*((-np.sin(theta8)*np.cos(theta9)*np.cos(theta10) - np.sin(theta10)*np.cos(theta8))*np.cos(theta11) + np.sin(theta8)*np.sin(theta9)*np.sin(theta11))*np.cos(theta12) + 0.2251*(-np.sin(theta8)*np.sin(theta10)*np.cos(theta9) + np.cos(theta8)*np.cos(theta10))*np.sin(theta12))*np.cos(theta13) - (-0.2251*(-np.sin(theta8)*np.cos(theta9)*np.cos(theta10) - np.sin(theta10)*np.cos(theta8))*np.sin(theta11) + 0.2251*np.sin(theta8)*np.sin(theta9)*np.cos(theta11))*np.sin(theta13), 0], 
    
            [0, (-0.2251*(np.sin(theta9)*np.sin(theta11) - np.cos(theta9)*np.cos(theta10)*np.cos(theta11))*np.cos(theta12) - 0.2251*np.sin(theta10)*np.sin(theta12)*np.cos(theta9))*np.sin(theta13) + (0.2251*np.sin(theta9)*np.cos(theta11) + 0.2251*np.sin(theta11)*np.cos(theta9)*np.cos(theta10))*np.cos(theta13) + 0.32*np.sin(theta9)*np.cos(theta11) + 0.3*np.sin(theta9) + 0.32*np.sin(theta11)*np.cos(theta9)*np.cos(theta10), 
             (-0.2251*np.sin(theta9)*np.sin(theta10)*np.cos(theta11)*np.cos(theta12) - 0.2251*np.sin(theta9)*np.sin(theta12)*np.cos(theta10))*np.sin(theta13) - 0.2251*np.sin(theta9)*np.sin(theta10)*np.sin(theta11)*np.cos(theta13) - 0.32*np.sin(theta9)*np.sin(theta10)*np.sin(theta11), -0.2251*(np.sin(theta9)*np.sin(theta11)*np.cos(theta10) - np.cos(theta9)*np.cos(theta11))*np.sin(theta13)*np.cos(theta12) + (0.2251*np.sin(theta9)*np.cos(theta10)*np.cos(theta11) + 0.2251*np.sin(theta11)*np.cos(theta9))*np.cos(theta13) + 0.32*np.sin(theta9)*np.cos(theta10)*np.cos(theta11) + 0.32*np.sin(theta11)*np.cos(theta9), 
             (0.2251*(-np.sin(theta9)*np.cos(theta10)*np.cos(theta11) - np.sin(theta11)*np.cos(theta9))*np.sin(theta12) - 0.2251*np.sin(theta9)*np.sin(theta10)*np.cos(theta12))*np.sin(theta13), (-0.2251*(-np.sin(theta9)*np.cos(theta10)*np.cos(theta11) - np.sin(theta11)*np.cos(theta9))*np.cos(theta12) - 0.2251*np.sin(theta9)*np.sin(theta10)*np.sin(theta12))*np.cos(theta13) - (0.2251*np.sin(theta9)*np.sin(theta11)*np.cos(theta10) - 0.2251*np.cos(theta9)*np.cos(theta11))*np.sin(theta13), 0], 
    
            [(-0.2251*((-np.sin(theta8)*np.cos(theta9)*np.cos(theta10) - np.sin(theta10)*np.cos(theta8))*np.cos(theta11) + np.sin(theta8)*np.sin(theta9)*np.sin(theta11))*np.cos(theta12) - 0.2251*(np.sin(theta8)*np.sin(theta10)*np.cos(theta9) - np.cos(theta8)*np.cos(theta10))*np.sin(theta12))*np.sin(theta13) + (0.2251*(np.sin(theta8)*np.cos(theta9)*np.cos(theta10) + np.sin(theta10)*np.cos(theta8))*np.sin(theta11) + 0.2251*np.sin(theta8)*np.sin(theta9)*np.cos(theta11))*np.cos(theta13) + (0.32*np.sin(theta8)*np.cos(theta9)*np.cos(theta10) + 0.32*np.sin(theta10)*np.cos(theta8))*np.sin(theta11) + 0.32*np.sin(theta8)*np.sin(theta9)*np.cos(theta11) + 0.3*np.sin(theta8)*np.sin(theta9),
             (-0.2251*(-np.sin(theta9)*np.cos(theta8)*np.cos(theta10)*np.cos(theta11) - np.sin(theta11)*np.cos(theta8)*np.cos(theta9))*np.cos(theta12) - 0.2251*np.sin(theta9)*np.sin(theta10)*np.sin(theta12)*np.cos(theta8))*np.sin(theta13) + (0.2251*np.sin(theta9)*np.sin(theta11)*np.cos(theta8)*np.cos(theta10) - 0.2251*np.cos(theta8)*np.cos(theta9)*np.cos(theta11))*np.cos(theta13) + 0.32*np.sin(theta9)*np.sin(theta11)*np.cos(theta8)*np.cos(theta10) - 0.32*np.cos(theta8)*np.cos(theta9)*np.cos(theta11) - 0.3*np.cos(theta8)*np.cos(theta9), 
             (-0.2251*(np.sin(theta8)*np.sin(theta10) - np.cos(theta8)*np.cos(theta9)*np.cos(theta10))*np.sin(theta12) - 0.2251*(-np.sin(theta8)*np.cos(theta10) - np.sin(theta10)*np.cos(theta8)*np.cos(theta9))*np.cos(theta11)*np.cos(theta12))*np.sin(theta13) + (0.32*np.sin(theta8)*np.cos(theta10) + 0.32*np.sin(theta10)*np.cos(theta8)*np.cos(theta9))*np.sin(theta11) + 0.2251*(np.sin(theta8)*np.cos(theta10) + np.sin(theta10)*np.cos(theta8)*np.cos(theta9))*np.sin(theta11)*np.cos(theta13), 
             -0.2251*(-(-np.sin(theta8)*np.sin(theta10) + np.cos(theta8)*np.cos(theta9)*np.cos(theta10))*np.sin(theta11) - np.sin(theta9)*np.cos(theta8)*np.cos(theta11))*np.sin(theta13)*np.cos(theta12) + (0.2251*(np.sin(theta8)*np.sin(theta10) - np.cos(theta8)*np.cos(theta9)*np.cos(theta10))*np.cos(theta11) + 0.2251*np.sin(theta9)*np.sin(theta11)*np.cos(theta8))*np.cos(theta13) + (0.32*np.sin(theta8)*np.sin(theta10) - 0.32*np.cos(theta8)*np.cos(theta9)*np.cos(theta10))*np.cos(theta11) + 0.32*np.sin(theta9)*np.sin(theta11)*np.cos(theta8), 
             (0.2251*((-np.sin(theta8)*np.sin(theta10) + np.cos(theta8)*np.cos(theta9)*np.cos(theta10))*np.cos(theta11) - np.sin(theta9)*np.sin(theta11)*np.cos(theta8))*np.sin(theta12) - 0.2251*(-np.sin(theta8)*np.cos(theta10) - np.sin(theta10)*np.cos(theta8)*np.cos(theta9))*np.cos(theta12))*np.sin(theta13), 
             (-0.2251*((-np.sin(theta8)*np.sin(theta10) + np.cos(theta8)*np.cos(theta9)*np.cos(theta10))*np.cos(theta11) - np.sin(theta9)*np.sin(theta11)*np.cos(theta8))*np.cos(theta12) + 0.2251*(np.sin(theta8)*np.cos(theta10) + np.sin(theta10)*np.cos(theta8)*np.cos(theta9))*np.sin(theta12))*np.cos(theta13) - (-0.2251*(-np.sin(theta8)*np.sin(theta10) + np.cos(theta8)*np.cos(theta9)*np.cos(theta10))*np.sin(theta11) - 0.2251*np.sin(theta9)*np.cos(theta8)*np.cos(theta11))*np.sin(theta13), 0]])

print(J)